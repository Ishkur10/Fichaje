import React, { useState, useEffect } from 'react';\nimport { \n  Calendar, \n  Trash2, \n  Eye, \n  EyeOff, \n  Gift, \n  Heart, \n  Stethoscope, \n  ChevronDown, \n  ChevronUp,\n  Clock,\n  User,\n  AlertTriangle\n} from 'lucide-react';\nimport useFichaje from '../../hooks/useFichaje';\nimport Button from '../ui/Button';\nimport { \n  getTipoDisplayName,\n  getTipoColorClasses,\n  TIPOS_DIA_ESPECIAL\n} from '../../utils/diasEspecialesUtils';\n\nconst GestionDiasEspeciales = () => {\n  const { getDiasEspeciales, eliminarDiaEspecial, nombreEmpleado } = useFichaje();\n  const [diasEspeciales, setDiasEspeciales] = useState([]);\n  const [mostrarTodos, setMostrarTodos] = useState(false);\n  const [filtroTipo, setFiltroTipo] = useState('todos');\n  const [expandido, setExpandido] = useState(false);\n\n  useEffect(() => {\n    cargarDiasEspeciales();\n  }, []);\n\n  const cargarDiasEspeciales = () => {\n    const dias = getDiasEspeciales();\n    // Filtrar por empleado actual y ordenar por fecha\n    const diasFiltrados = dias\n      .filter(dia => dia.empleado === nombreEmpleado && dia.activo)\n      .sort((a, b) => new Date(b.fechaCompleta) - new Date(a.fechaCompleta));\n    \n    setDiasEspeciales(diasFiltrados);\n  };\n\n  const handleEliminar = async (diaEspecialId) => {\n    if (window.confirm('¿Estás seguro de eliminar este día especial?')) {\n      const resultado = eliminarDiaEspecial(diaEspecialId);\n      \n      if (resultado.success) {\n        cargarDiasEspeciales();\n      } else {\n        alert('Error al eliminar el día especial: ' + resultado.message);\n      }\n    }\n  };\n\n  const diasFiltrados = diasEspeciales.filter(dia => {\n    if (filtroTipo === 'todos') return true;\n    return dia.tipo === filtroTipo;\n  });\n\n  const diasMostrar = mostrarTodos ? diasFiltrados : diasFiltrados.slice(0, 5);\n\n  const estadisticas = {\n    total: diasEspeciales.length,\n    totalHoras: diasEspeciales.reduce((total, dia) => total + dia.horas, 0),\n    porTipo: {\n      [TIPOS_DIA_ESPECIAL.FESTIVO_MANUAL]: diasEspeciales.filter(d => d.tipo === TIPOS_DIA_ESPECIAL.FESTIVO_MANUAL).length,\n      [TIPOS_DIA_ESPECIAL.FIESTA_PERSONAL]: diasEspeciales.filter(d => d.tipo === TIPOS_DIA_ESPECIAL.FIESTA_PERSONAL).length,\n      [TIPOS_DIA_ESPECIAL.BAJA_LABORAL]: diasEspeciales.filter(d => d.tipo === TIPOS_DIA_ESPECIAL.BAJA_LABORAL).length\n    }\n  };\n\n  if (!nombreEmpleado) {\n    return (\n      <div className=\"bg-white rounded-xl shadow-lg p-6 mb-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-semibold flex items-center\">\n            <Calendar className=\"h-5 w-5 mr-2 text-blue-600\" />\n            Días Especiales Registrados\n          </h2>\n        </div>\n        \n        <div className=\"text-center py-8 text-gray-500\">\n          <AlertTriangle className=\"h-16 w-16 mx-auto mb-4 text-gray-300\" />\n          <p className=\"text-lg font-medium mb-2\">Empleado no identificado</p>\n          <p className=\"text-sm\">Guarda tu nombre en el control de fichaje para ver tus días especiales</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-lg p-6 mb-6\">\n      <div \n        className=\"flex items-center justify-between cursor-pointer\"\n        onClick={() => setExpandido(!expandido)}\n      >\n        <h2 className=\"text-xl font-semibold flex items-center\">\n          <Calendar className=\"h-5 w-5 mr-2 text-blue-600\" />\n          Días Especiales Registrados\n        </h2>\n        <div className=\"flex items-center space-x-2\">\n          <span className=\"text-sm text-gray-600\">\n            {estadisticas.total} registro{estadisticas.total !== 1 ? 's' : ''}\n          </span>\n          {expandido ? \n            <ChevronUp className=\"h-5 w-5 text-gray-500\" /> : \n            <ChevronDown className=\"h-5 w-5 text-gray-500\" />\n          }\n        </div>\n      </div>\n\n      {expandido && (\n        <div className=\"mt-6\">\n          {/* Estadísticas resumidas */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <h3 className=\"text-sm text-blue-800 font-medium mb-1\">Total Registros</h3>\n              <p className=\"text-2xl font-bold text-blue-700\">{estadisticas.total}</p>\n            </div>\n            \n            <div className=\"bg-green-50 p-4 rounded-lg\">\n              <h3 className=\"text-sm text-green-800 font-medium mb-1\">Horas Totales</h3>\n              <p className=\"text-2xl font-bold text-green-700\">{estadisticas.totalHoras}h</p>\n            </div>\n            \n            <div className=\"bg-yellow-50 p-4 rounded-lg\">\n              <h3 className=\"text-sm text-yellow-800 font-medium mb-1\">Días Festivos</h3>\n              <p className=\"text-2xl font-bold text-yellow-700\">\n                {estadisticas.porTipo[TIPOS_DIA_ESPECIAL.FESTIVO_MANUAL]}\n              </p>\n            </div>\n            \n            <div className=\"bg-red-50 p-4 rounded-lg\">\n              <h3 className=\"text-sm text-red-800 font-medium mb-1\">Bajas Laborales</h3>\n              <p className=\"text-2xl font-bold text-red-700\">\n                {estadisticas.porTipo[TIPOS_DIA_ESPECIAL.BAJA_LABORAL]}\n              </p>\n            </div>\n          </div>\n\n          {/* Filtros */}\n          <div className=\"flex flex-wrap gap-2 mb-4\">\n            <button\n              onClick={() => setFiltroTipo('todos')}\n              className={`px-3 py-1 text-sm font-medium rounded-full ${\n                filtroTipo === 'todos'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n              }`}\n            >\n              Todos ({estadisticas.total})\n            </button>\n            \n            {Object.values(TIPOS_DIA_ESPECIAL).map(tipo => {\n              const cantidad = estadisticas.porTipo[tipo] || 0;\n              if (cantidad === 0) return null;\n              \n              return (\n                <button\n                  key={tipo}\n                  onClick={() => setFiltroTipo(tipo)}\n                  className={`px-3 py-1 text-sm font-medium rounded-full ${\n                    filtroTipo === tipo\n                      ? 'bg-blue-600 text-white'\n                      : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                  }`}\n                >\n                  {getTipoDisplayName(tipo)} ({cantidad})\n                </button>\n              );\n            })}\n          </div>\n\n          {/* Lista de días especiales */}\n          {diasMostrar.length > 0 ? (\n            <div className=\"space-y-3\">\n              {diasMostrar.map((dia) => (\n                <DiaEspecialCard \n                  key={dia.id} \n                  dia={dia} \n                  onEliminar={handleEliminar}\n                />\n              ))}\n              \n              {/* Botón mostrar más/menos */}\n              {diasFiltrados.length > 5 && (\n                <div className=\"flex justify-center pt-4\">\n                  <Button\n                    onClick={() => setMostrarTodos(!mostrarTodos)}\n                    variant=\"secondary\"\n                    icon={mostrarTodos ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                    className=\"text-sm\"\n                  >\n                    {mostrarTodos \n                      ? `Mostrar menos` \n                      : `Mostrar ${diasFiltrados.length - 5} más`\n                    }\n                  </Button>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"text-center py-8 text-gray-500\">\n              <Calendar className=\"h-16 w-16 mx-auto mb-4 text-gray-300\" />\n              <p className=\"text-lg font-medium mb-2\">\n                {filtroTipo === 'todos' \n                  ? 'No hay días especiales registrados' \n                  : `No hay registros de ${getTipoDisplayName(filtroTipo).toLowerCase()}`\n                }\n              </p>\n              <p className=\"text-sm\">\n                Los días especiales registrados aparecerán aquí\n              </p>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst DiaEspecialCard = ({ dia, onEliminar }) => {\n  const colorClasses = getTipoColorClasses(dia.tipo);\n  const fechaObj = new Date(dia.fechaCompleta);\n  const esReciente = (new Date() - fechaObj) / (1000 * 60 * 60 * 24) <= 7; // Últimos 7 días\n  \n  const getIcono = (tipo) => {\n    switch (tipo) {\n      case TIPOS_DIA_ESPECIAL.FESTIVO_MANUAL:\n        return <Gift className=\"h-5 w-5\" />;\n      case TIPOS_DIA_ESPECIAL.FIESTA_PERSONAL:\n        return <Heart className=\"h-5 w-5\" />;\n      case TIPOS_DIA_ESPECIAL.BAJA_LABORAL:\n        return <Stethoscope className=\"h-5 w-5\" />;\n      default:\n        return <Calendar className=\"h-5 w-5\" />;\n    }\n  };\n\n  return (\n    <div className={`p-4 rounded-lg border-2 transition-all ${colorClasses.border} ${colorClasses.bg}`}>\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex items-start space-x-3 flex-1\">\n          <div className={`${colorClasses.text} mt-1`}>\n            {getIcono(dia.tipo)}\n          </div>\n          \n          <div className=\"flex-1\">\n            <div className=\"flex items-center space-x-2 mb-1\">\n              <h3 className={`font-medium ${colorClasses.text}`}>\n                {getTipoDisplayName(dia.tipo)}\n              </h3>\n              {esReciente && (\n                <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\">\n                  Reciente\n                </span>\n              )}\n            </div>\n            \n            <div className=\"text-sm text-gray-600 space-y-1\">\n              <div className=\"flex items-center\">\n                <Calendar className=\"h-4 w-4 mr-2\" />\n                <span>\n                  {fechaObj.toLocaleDateString('es', { \n                    weekday: 'long', \n                    day: 'numeric', \n                    month: 'long',\n                    year: 'numeric'\n                  })}\n                </span>\n              </div>\n              \n              <div className=\"flex items-center\">\n                <Clock className=\"h-4 w-4 mr-2\" />\n                <span>{dia.horas} horas registradas</span>\n              </div>\n              \n              {dia.motivo && (\n                <div className=\"mt-2\">\n                  <span className=\"font-medium\">Motivo:</span> {dia.motivo}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2 ml-4\">\n          <Button\n            onClick={() => onEliminar(dia.id)}\n            variant=\"danger\"\n            size=\"sm\"\n            icon={<Trash2 className=\"h-4 w-4\" />}\n            className=\"text-xs\"\n          >\n            Eliminar\n          </Button>\n        </div>\n      </div>\n      \n      <div className=\"mt-3 pt-3 border-t border-gray-200\">\n        <div className=\"flex items-center justify-between text-xs text-gray-500\">\n          <div className=\"flex items-center\">\n            <User className=\"h-3 w-3 mr-1\" />\n            <span>Registrado por {dia.empleado}</span>\n          </div>\n          <span>\n            {new Date(dia.fechaRegistro).toLocaleDateString('es', {\n              day: 'numeric',\n              month: 'short',\n              hour: '2-digit',\n              minute: '2-digit'\n            })}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GestionDiasEspeciales;