import React, { useState, useEffect } from 'react';\nimport { \n  Calendar, \n  Clock, \n  Award, \n  TrendingUp, \n  Gift, \n  Settings,\n  CheckCircle, \n  AlertCircle\n} from 'lucide-react';\nimport useFichaje from '../../hooks/useFichaje';\nimport { getTipoDisplayName } from '../../utils/diasEspecialesUtils';\n\nconst ResumenDashboard = () => {\n  const { \n    fichajes, \n    sesionActiva, \n    nombreEmpleado,\n    getEstadisticasExtendidas,\n    getResumenHorasExtras,\n    getDiasEspeciales,\n    verificarFestivo\n  } = useFichaje();\n  \n  const [resumen, setResumen] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (nombreEmpleado) {\n      calcularResumen();\n    } else {\n      setLoading(false);\n    }\n  }, [fichajes, sesionActiva, nombreEmpleado]);\n\n  const calcularResumen = () => {\n    try {\n      setLoading(true);\n      \n      // Calcular estadÃ­sticas del mes actual\n      const hoy = new Date();\n      const inicioMes = new Date(hoy.getFullYear(), hoy.getMonth(), 1);\n      const finMes = new Date(hoy.getFullYear(), hoy.getMonth() + 1, 0, 23, 59, 59, 999);\n      \n      // Calcular estadÃ­sticas de la semana actual\n      const inicioSemana = new Date(hoy);\n      const dia = inicioSemana.getDay();\n      const diferencia = dia === 0 ? -6 : 1 - dia;\n      inicioSemana.setDate(hoy.getDate() + diferencia);\n      inicioSemana.setHours(0, 0, 0, 0);\n      \n      const finSemana = new Date(inicioSemana);\n      finSemana.setDate(inicioSemana.getDate() + 6);\n      finSemana.setHours(23, 59, 59, 999);\n      \n      // Obtener estadÃ­sticas\n      const estadisticasMes = getEstadisticasExtendidas(inicioMes, finMes);\n      const horasExtrasMes = getResumenHorasExtras(inicioMes, finMes);\n      const horasExtrasSemana = getResumenHorasExtras(inicioSemana, finSemana);\n      \n      // Obtener dÃ­as especiales del mes\n      const diasEspeciales = getDiasEspeciales()\n        .filter(dia => {\n          const fechaDia = new Date(dia.fechaCompleta);\n          return dia.empleado === nombreEmpleado && \n                 dia.activo &&\n                 fechaDia >= inicioMes && \n                 fechaDia <= finMes;\n        });\n      \n      // Verificar si hoy es festivo\n      const infoFestivoHoy = verificarFestivo(hoy);\n      \n      setResumen({\n        mesActual: {\n          diasTrabajados: estadisticasMes?.diasTotalesConEspeciales || 0,\n          horasTrabajadas: estadisticasMes?.horasTotalesConEspeciales || 0,\n          diasFestivos: estadisticasMes?.diasFestivosTrabajados || 0,\n          diasEspeciales: diasEspeciales.length,\n          eficiencia: estadisticasMes?.eficiencia || 0\n        },\n        horasExtras: {\n          mesActual: horasExtrasMes?.horasExtrasTotal || 0,\n          semanaActual: horasExtrasSemana?.horasExtrasTotal || 0,\n          semanasConExtras: horasExtrasMes?.semanas?.filter(s => s.horasExtras > 0).length || 0\n        },\n        diasEspeciales: {\n          total: diasEspeciales.length,\n          porTipo: diasEspeciales.reduce((acc, dia) => {\n            acc[dia.tipo] = (acc[dia.tipo] || 0) + 1;\n            return acc;\n          }, {}),\n          horasTotal: diasEspeciales.reduce((total, dia) => total + dia.horas, 0)\n        },\n        hoy: {\n          esFestivo: infoFestivoHoy.esFestivo,\n          nombreFestivo: infoFestivoHoy.nombre,\n          sesionActiva: !!sesionActiva\n        }\n      });\n      \n    } catch (error) {\n      console.error('Error al calcular resumen:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!nombreEmpleado) {\n    return (\n      <div className=\"bg-white rounded-xl shadow-lg p-6 mb-6\">\n        <div className=\"text-center py-8 text-gray-500\">\n          <AlertCircle className=\"h-16 w-16 mx-auto mb-4 text-gray-300\" />\n          <p className=\"text-lg font-medium mb-2\">Bienvenido al Sistema de Fichajes</p>\n          <p className=\"text-sm\">\n            Guarda tu nombre en el control de fichaje para comenzar a usar todas las funcionalidades\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (loading || !resumen) {\n    return (\n      <div className=\"bg-white rounded-xl shadow-lg p-6 mb-6\">\n        <div className=\"text-center py-8 text-gray-500\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p>Cargando resumen...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-lg p-6 mb-6\">\n      <div className=\"mb-6\">\n        <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">\n          Â¡Hola, {nombreEmpleado}! ðŸ‘‹\n        </h2>\n        <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n          <div className=\"flex items-center\">\n            <Calendar className=\"h-4 w-4 mr-1\" />\n            <span>{new Date().toLocaleDateString('es', { \n              weekday: 'long', \n              day: 'numeric', \n              month: 'long' \n            })}</span>\n          </div>\n          \n          {resumen.hoy.esFestivo && (\n            <div className=\"flex items-center text-yellow-600\">\n              <Gift className=\"h-4 w-4 mr-1\" />\n              <span>{resumen.hoy.nombreFestivo}</span>\n            </div>\n          )}\n          \n          {resumen.hoy.sesionActiva && (\n            <div className=\"flex items-center text-green-600\">\n              <CheckCircle className=\"h-4 w-4 mr-1\" />\n              <span>SesiÃ³n activa</span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Resumen principal */}\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n        <div className=\"bg-blue-50 p-4 rounded-lg\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h3 className=\"text-sm text-blue-800 font-medium\">Mes Actual</h3>\n            <Calendar className=\"h-4 w-4 text-blue-600\" />\n          </div>\n          <p className=\"text-2xl font-bold text-blue-700\">\n            {resumen.mesActual.diasTrabajados}\n          </p>\n          <p className=\"text-xs text-blue-600\">\n            dÃ­as trabajados\n          </p>\n          <p className=\"text-xs text-blue-600 mt-1\">\n            {resumen.mesActual.horasTrabajadas}h totales\n          </p>\n        </div>\n        \n        <div className=\"bg-yellow-50 p-4 rounded-lg\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h3 className=\"text-sm text-yellow-800 font-medium\">Horas Extras</h3>\n            <Award className=\"h-4 w-4 text-yellow-600\" />\n          </div>\n          <p className=\"text-2xl font-bold text-yellow-700\">\n            {resumen.horasExtras.mesActual.toFixed(1)}h\n          </p>\n          <p className=\"text-xs text-yellow-600\">\n            este mes\n          </p>\n          <p className=\"text-xs text-yellow-600 mt-1\">\n            {resumen.horasExtras.semanaActual.toFixed(1)}h esta semana\n          </p>\n        </div>\n        \n        <div className=\"bg-green-50 p-4 rounded-lg\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h3 className=\"text-sm text-green-800 font-medium\">Eficiencia</h3>\n            <TrendingUp className=\"h-4 w-4 text-green-600\" />\n          </div>\n          <p className=\"text-2xl font-bold text-green-700\">\n            {resumen.mesActual.eficiencia.toFixed(0)}%\n          </p>\n          <p className=\"text-xs text-green-600\">\n            vs horas teÃ³ricas\n          </p>\n          <p className=\"text-xs text-green-600 mt-1\">\n            {resumen.mesActual.diasFestivos} festivos trabajados\n          </p>\n        </div>\n        \n        <div className=\"bg-purple-50 p-4 rounded-lg\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h3 className=\"text-sm text-purple-800 font-medium\">DÃ­as Especiales</h3>\n            <Settings className=\"h-4 w-4 text-purple-600\" />\n          </div>\n          <p className=\"text-2xl font-bold text-purple-700\">\n            {resumen.diasEspeciales.total}\n          </p>\n          <p className=\"text-xs text-purple-600\">\n            este mes\n          </p>\n          <p className=\"text-xs text-purple-600 mt-1\">\n            {resumen.diasEspeciales.horasTotal}h registradas\n          </p>\n        </div>\n      </div>\n\n      {/* Detalles adicionales */}\n      {(resumen.horasExtras.semanasConExtras > 0 || resumen.diasEspeciales.total > 0) && (\n        <div className=\"border-t border-gray-200 pt-4\">\n          <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Resumen adicional</h3>\n          <div className=\"flex flex-wrap gap-4 text-sm\">\n            {resumen.horasExtras.semanasConExtras > 0 && (\n              <div className=\"flex items-center text-yellow-600\">\n                <Award className=\"h-4 w-4 mr-1\" />\n                <span>\n                  {resumen.horasExtras.semanasConExtras} semana{resumen.horasExtras.semanasConExtras > 1 ? 's' : ''} con horas extras\n                </span>\n              </div>\n            )}\n            \n            {Object.entries(resumen.diasEspeciales.porTipo).map(([tipo, cantidad]) => (\n              <div key={tipo} className=\"flex items-center text-gray-600\">\n                <Settings className=\"h-4 w-4 mr-1\" />\n                <span>\n                  {cantidad} {getTipoDisplayName(tipo).toLowerCase()}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ResumenDashboard;